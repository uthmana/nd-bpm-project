
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}


model User {
  id          String       @id @default(uuid())
  name        String
  email       String?      @unique
  password    String
  role        String       @default("NORMAL")
  token       String?
  status      String       @default("ACTIVE")
  address     Address? // Added address field
  contactInfo ContactInfo? // Added contactInfo field
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@map("users")
}

enum UserRole {
  ADMIN
  SUPER
  NORMAL
  TECH
}

enum UserStatus {
  ACTIVE
  PASSIVE
}

model Address {
  id      String  @id @default(cuid())
  street  String
  city    String
  state   String
  zipCode String
  user    User?   @relation(fields: [userId], references: [id])
  userId  String? @unique @default(cuid())
}

model ContactInfo {
  id     String @id @default(cuid())
  phone  String
  email  String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @default(cuid())
}

model Customer {
  id           String    @id @default(uuid())
  name         String
  email        String?   @unique
  password     String?
  PostalCode   String?
  address      String?
  phoneNumber  String?
  phoneNumber2 String?
  code         String?
  definition   String?
  taxNo        String?
  tax_Office   String?
  currency     Currency? @default(TL)
  cardType     CardType? @default(ALICI_SATICI)
}

model Offer {
  id         String      @id @default(uuid())
  name       String
  createdAt  DateTime    @default(now())
  status     OfferStatus @default(PENDING)
  customerId String
}

enum OfferStatus {
  SENT
  PENDING
  ACCEPTED
  REJECTED
}

enum Currency {
  TL
  USD
}

enum CardType {
  ALICI_SATICI
  ALICI
  SATICI
}
