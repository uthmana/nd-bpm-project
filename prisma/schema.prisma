// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // provider  = "postgresql"
  // url       = env("POSTGRES_PRISMA_URL") 
  // directUrl = env("POSTGRES_URL_NON_POOLING") 
}

model User {
  id              String       @id @default(uuid())
  name            String
  email           String?      @unique
  password        String
  role            String       @default("NORMAL")
  status          String       @default("ACTIVE")
  address         Address? // Added address field
  contactInfo     ContactInfo? // Added contactInfo field
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  token           String?      @unique
  tokenExpiryDate DateTime?

  @@map("users")
}

model Address {
  id      String  @id @default(cuid())
  street  String
  city    String
  state   String
  zipCode String
  user    User?   @relation(fields: [userId], references: [id])
  userId  String? @unique @default(cuid())
}

model ContactInfo {
  id     String @id @default(cuid())
  phone  String
  email  String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @default(cuid())
}

model Customer {
  id           String    @id @default(uuid())
  name         String
  email        String?   @unique
  password     String?
  PostalCode   String?
  address      String?
  phoneNumber  String?
  phoneNumber2 String?
  code         String?
  definition   String?
  taxNo        String?
  tax_Office   String?
  currency     Currency? @default(TL)
  cardType     CardType? @default(ALICI_SATICI)
  Offers       Offer[]
}

model Stock {
  id              String  @id @default(uuid())
  product_code    String
  product_name    String
  product_barcode String
  description     String?
  main_group      String?
  group1          String?
  group2          String?
  inventory       Int
  unit            String?
  current_price   String
  curency         String
  brand           String?
}

model Offer {
  id         String      @id @default(uuid())
  name       String
  createdAt  DateTime    @default(now())
  status     OfferStatus @default(PENDING)
  customerId String
  Customer   Customer    @relation(fields: [customerId], references: [id])
}

enum UserRole {
  ADMIN
  SUPER
  NORMAL
  TECH
}

enum UserStatus {
  ACTIVE
  PASSIVE
}

enum OfferStatus {
  SENT
  PENDING
  ACCEPTED
  REJECTED
}

enum Currency {
  TL
  USD
}

enum CardType {
  ALICI_SATICI
  ALICI
  SATICI
}
