generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

  //Uncomment the below for production database connection
  //url       = env("POSTGRES_PRISMA_URL")
  //directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id              String     @id @default(cuid())
  name            String
  email           String?    @unique
  contactNumber   String?    @unique
  password        String?
  role            UserRole   @default(NORMAL)
  status          UserStatus @default(ACTIVE)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime?  @updatedAt
  createdBy       String?
  updatedBy       String?
  token           String?    @unique
  tokenExpiryDate DateTime?
  address         String?

  @@map("users")
}

model Customer {
  id                     String    @id @default(cuid())
  code                   String?
  cardType               CardType? @default(ALICI)
  taxNo                  String?
  company_name           String?
  address                String?
  postalCode             String?
  phoneNumber            String?
  phoneNumber_shipment   String?
  phoneNumber_quality    String?
  phoneNumber_accountant String?
  email                  String?
  email_quality          String?
  email_offer            String?
  email_accountant       String?
  tax_Office             String?
  taxOfficeCode          String?
  rep_name               String
  currency               Currency? @default(TL)
  country_code           String
  province_code          String
  district_code          String
  definition             String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime? @updatedAt
  createdBy              String?
  updatedBy              String?
  Offers                 Offer[]
  Fault                  Fault[]
  Stock                  Stock[]
  Invoice                Invoice[]

  @@map("customers")
}

model Stock {
  id                   String               @id @default(cuid())
  product_code         String
  product_name         String
  product_barcode      String?
  productBatchNumber   String?
  description          String?
  main_group           String?
  group1               String?
  group2               String?
  inventory            Int?
  unit                 String?
  current_price        String?
  currency             Currency             @default(TL)
  brand                String?
  date                 DateTime?            @default(now())
  updatedAt            DateTime?            @updatedAt
  createdBy            String?
  updatedBy            String?
  image                String?
  customerId           String?
  customer             Customer?            @relation(fields: [customerId], references: [id], onDelete: Cascade)
  defaultTechParameter TechnicalParameter[]
  faultId              String?              @unique
}

model Fault {
  id                         String               @id @default(cuid())
  customerId                 String?
  customer                   Customer?            @relation(fields: [customerId], references: [id], onDelete: Cascade)
  arrivalDate                DateTime?            @default(now())
  invoiceDate                DateTime?
  product                    String?
  product_barcode            String?
  quantity                   Int?
  shipmentQty                Int?
  productCode                String?
  productBatchNumber         String?
  application                String?
  standard                   String?
  color                      String?
  faultDescription           String?
  technicalDrawingAttachment String?
  status                     FaultStatus          @default(GIRIS_KONTROL_BEKLENIYOR)
  faultControl               FaultControl[]
  unacceptable               Unacceptable[]
  process                    Process[]
  finalControl               FinalControl[]
  defaultTechParameter       TechnicalParameter[]
  createdAt                  DateTime             @default(now())
  updatedAt                  DateTime?            @updatedAt
  createdBy                  String?
  updatedBy                  String?
  Invoice                    Invoice?             @relation(fields: [invoiceId], references: [id])
  invoiceId                  String?

  @@index([status])
}

model FaultControl {
  id                    String             @id @default(cuid())
  traceabilityCode      String?
  arrivalDate           DateTime?
  invoiceDate           DateTime?
  product               String?
  quantity              Int?
  productCode           String?
  productBatchNumber    String?
  plating               String?
  controlDate           DateTime?          @default(now())
  image                 String?
  productDimension      String?
  dimensionConfirmation Boolean?
  quantityConfirmation  Boolean?
  dirtyThreads          Boolean?           @default(false)
  deformity             Boolean?           @default(false)
  processFrequency      String?
  frequencyDimension    Int?
  remarks               String?
  createdAt             DateTime           @default(now())
  updatedAt             DateTime?          @updatedAt
  createdBy             String?
  updatedBy             String?
  result                FaultControlResult
  faultId               String             @unique
  Fault                 Fault              @relation(fields: [faultId], references: [id], onDelete: Cascade)
}

model Unacceptable {
  id                      String                  @id @default(cuid())
  unacceptableDescription String?
  unacceptableAction      String?
  result                  String?
  description             String?
  createdAt               DateTime                @default(now())
  updatedAt               DateTime?               @updatedAt
  createdBy               String?
  updatedBy               String?
  Fault                   Fault?                  @relation(fields: [faultId], references: [id])
  faultId                 String?
  unacceptableStage       UnacceptableStageStatus @default(ENTRY)
}

model Process {
  id                         String               @id @default(cuid())
  frequency                  Int?
  technicalDrawingAttachment String?
  machineName                String?
  machineId                  String?
  createdAt                  DateTime             @default(now())
  updatedAt                  DateTime             @updatedAt
  createdBy                  String?
  updatedBy                  String?
  Fault                      Fault?               @relation(fields: [faultId], references: [id])
  faultId                    String?
  status                     ProcessStatus        @default(PENDING)
  technicalParams            TechnicalParameter[]
  machine                    Machine[]
}

model FinalControl {
  id                    String             @id @default(cuid())
  olcu_Kontrol          FinalItemStatus?
  gorunum_kontrol       FinalItemStatus?
  tork_Kontrol          FinalItemStatus?
  paketleme             String?
  kontrol_edilen_miktar Int?
  hatali_miktar         Int?
  nakliye_miktar        Int?
  image                 String?
  remarks               String?
  createdAt             DateTime           @default(now())
  updatedAt             DateTime?          @updatedAt
  createdBy             String?
  updatedBy             String?
  result                FaultControlResult
  testItem              TestItem[]
  testArea              TestArea[]
  faultId               String             @unique
  Fault                 Fault              @relation(fields: [faultId], references: [id])
}

model TestArea {
  id             String        @id @default(cuid())
  title          String?
  requiredValue  String?
  unit           String?
  required_1     String?
  required_2     String?
  required_3     String?
  required_4     String?
  result_1       String?
  result_2       String?
  result_3       String?
  result_4       String?
  result_5       String?
  result_6       String?
  FinalControl   FinalControl? @relation(fields: [finalControlId], references: [id])
  finalControlId String?
}

model TestItem {
  id             String        @id @default(cuid())
  standard       String?
  requiredValue  String?
  x1             String?
  x2             String?
  x3             String?
  x4             String?
  x5             String?
  x6             String?
  x7             String?
  x8             String?
  x9             String?
  x10            String?
  result         String?
  description    String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime?     @updatedAt
  createdBy      String?
  updatedBy      String?
  FinalControl   FinalControl? @relation(fields: [finalControlId], references: [id])
  finalControlId String?
}

enum UnacceptableStageStatus {
  ENTRY
  FINAL
  PROCESS
  CUSTOMER
}

enum FinalItemStatus {
  OK
  NOT_OK
}

model Machine {
  id            String          @id @default(cuid())
  machine_Name  String
  machineParams MachineParams[]
  Process       Process?        @relation(fields: [processId], references: [id])
  processId     String?
}

model MachineParams {
  id           String   @id @default(cuid())
  param_name   String?
  display_name String?
  Machine      Machine? @relation(fields: [machineId], references: [id])
  machineId    String?
}

model TechnicalParameter {
  id                     String    @id @default(cuid())
  Ort_Uretim_saat        DateTime?
  Viskozite              String?
  Besleme_Tipi           String?
  Besleme_Hizi           String?
  Makine_Hizi            String?
  Hava_Basinci           String?
  Firin_Bant_Hizi        String?
  Firin_Sicakligi        String?
  Induksiyon_kW          String?
  Induksiyon_Volts       String?
  Induksiyon_kHz         String?
  Patch_Vibrasyon_hizi   String?
  Patch_Hava_Basinci     String?
  Patch_Toz_yukleme_Hizi String?
  Teach_Ayari            String?
  Delay_Ayari            String?
  Purge_Ayari            String?
  Testere_secimi         String?
  Kesim_Mesafesi         String?
  Yuva_Boyutu            String?
  createdAt              DateTime  @default(now())
  updatedAt              DateTime? @updatedAt
  createdBy              String?
  updatedBy              String?
  machineId              String
  Process                Process?  @relation(fields: [processId], references: [id], onDelete: Cascade)
  processId              String?
  Fault                  Fault?    @relation(fields: [faultId], references: [id])
  faultId                String?
  Stock                  Stock?    @relation(fields: [stockId], references: [id])
  stockId                String?
}

model Invoice {
  id          String        @id @default(cuid())
  barcode     String?
  invoiceDate DateTime
  currency    Currency?     @default(TL)
  docPath     String?
  amount      Float?
  vat         Float?
  totalAmount Float?
  description String?
  logoId      String?
  Fault       Fault[]
  status      InvoiceStatus @default(PENDING)
  customer    Customer      @relation(fields: [customerId], references: [id])
  customerId  String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  createdBy   String?
  updatedBy   String?
}

model Offer {
  id           String      @id @default(cuid())
  OfferType    String      @default("Fiyat Teklifi")
  barcode      String?
  startDate    DateTime
  endDate      DateTime
  currency     Currency?   @default(TL)
  amount       Float?
  vat          Float?
  totalAmount  Float?
  address      String?
  description  String?
  phoneNumber  String?
  email        String?
  creatorTitle String?
  rep_name     String?
  tax_Office   String?
  taxNo        String?
  docPath      String?
  product      OfferItem[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime?   @updatedAt
  createdBy    String?
  updatedBy    String?
  status       OfferStatus @default(PENDING)
  customerId   String?
  Customer     Customer?   @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model OfferItem {
  id            String    @id @default(cuid())
  name          String?
  application   String?
  standard      String?
  currency      Currency? @default(TL)
  quantity      Int?
  price         Float?
  unitPrice     Float?
  discountPrice Float?
  description   String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  createdBy     String?
  updatedBy     String?
  Offer         Offer?    @relation(fields: [offerId], references: [id])
  offerId       String?
}

enum InvoiceStatus {
  PENDING
  ACTIVE
  PAID
  NOT_PAID
}

model Notification {
  id          String        @id @default(cuid())
  title       String?
  description String?
  image       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?     @updatedAt
  recipient   NotifReceiver @default(NORMAL)
  link        String?
  workflowId  String?
  isEmailSent Boolean       @default(false)
  status      NotifStatus   @default(NOT_READ)
}

enum NotifStatus {
  READ
  NOT_READ
}

enum NotifReceiver {
  SUPER
  NORMAL
  TECH
  ADMIN
  OTHER
}

enum FaultControlResult {
  ACCEPT
  ACCEPTANCE_WITH_CONDITION
  PRE_PROCESS
  REJECT
}

enum FaultStatus {
  GIRIS_KONTROL_BEKLENIYOR
  PROSES_BEKLENIYOR
  PROSES_ISLENIYOR
  FINAL_KONTROL_BEKLENIYOR
  IRSALIYE_KESIMI_BEKLENIYOR
  SEVKIYAT_TAMAMLANDI
  GIRIS_KONTROL_RET
  FINAL_KONTROL_RET
  PENDING
  ACCEPT
  ACCEPTANCE_WITH_CONDITION
  PRE_PROCESS
  REJECT
}

model Applications {
  id   String @id @default(cuid())
  name String
}

model Colors {
  id   String @id @default(cuid())
  name String
}

model Standards {
  id   String @id @default(cuid())
  name String
}

enum UserRole {
  ADMIN
  SUPER
  NORMAL
  TECH
}

enum UserStatus {
  ACTIVE
  PASSIVE
}

enum OfferStatus {
  SENT
  PENDING
  ACCEPTED
  REJECTED
}

enum Currency {
  TL
  USD
  EUR
}

enum CardType {
  ALICI_SATICI
  ALICI
  SATICI
}

enum ProcessStatus {
  PENDING
  PROCESSING
  FINISHED
}
